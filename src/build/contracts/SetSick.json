{
  "contractName": "SetSick",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "patientId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "cmt",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "living",
          "type": "bool"
        }
      ],
      "name": "NewPatient",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sickId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sickCode",
          "type": "uint256"
        }
      ],
      "name": "NewSick",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_cmt",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_age",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sex",
          "type": "uint256"
        }
      ],
      "name": "CreatePatient",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "OwnerPatientCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "OwnerToPatient",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PatientToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PatientToSick",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_countSick",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_sickCode",
          "type": "uint256"
        }
      ],
      "name": "_createSick",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "_transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "countPatient",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getPatientByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "patients",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "patientId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cmt",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sex",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "living",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sickcodes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "idpatient",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sicks",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "sickCode",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_patientId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sickCode",
          "type": "uint256"
        }
      ],
      "name": "_setPatientSick",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_patientId",
          "type": "uint256"
        }
      ],
      "name": "viewSickCode",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "countSickCode",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_patientId",
          "type": "uint256"
        }
      ],
      "name": "PatientIdInSickCode",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"cmt\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"living\",\"type\":\"bool\"}],\"name\":\"NewPatient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sickId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sickCode\",\"type\":\"uint256\"}],\"name\":\"NewSick\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_cmt\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_age\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sex\",\"type\":\"uint256\"}],\"name\":\"CreatePatient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"OwnerPatientCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"OwnerToPatient\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"}],\"name\":\"PatientIdInSickCode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PatientToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PatientToSick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_countSick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_sickCode\",\"type\":\"uint256\"}],\"name\":\"_createSick\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sickCode\",\"type\":\"uint256\"}],\"name\":\"_setPatientSick\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"_transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"countPatient\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countSickCode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getPatientByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"patients\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cmt\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"living\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sickcodes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"idpatient\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sicks\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"sickCode\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"}],\"name\":\"viewSickCode\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/thanhvuong/thanh/PatientSC/contracts/SetSick.sol\":\"SetSick\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/thanhvuong/thanh/PatientSC/contracts/PatientFactory.sol\":{\"keccak256\":\"0x31f65c42d2ebdbaf21a250975291c5c411e73d512019b0cc4ff0f4337d3accc5\",\"urls\":[\"bzz-raw://ea6d4b141dedc961762a68ebee204988fad47eb1b2fe3d9c2d864084d226f5b9\",\"dweb:/ipfs/QmPMwbTbmNRjiHiHHmbP1T9LN14zgLAsD9oX8xQuKqDfnc\"]},\"/home/thanhvuong/thanh/PatientSC/contracts/SetSick.sol\":{\"keccak256\":\"0x3df878c20b491831dfa8567fc4ffc15e05b9a5c3afb3dc78869466f62908a909\",\"urls\":[\"bzz-raw://da019ad4a09d82ff7cb6d8711dbb9a10931d7e6f049ddfe113fdef358a183da2\",\"dweb:/ipfs/QmR6frVZrrzB9j8Q79QVDhpzGJPSc42HTzxuoV21fLQcVZ\"]},\"/home/thanhvuong/thanh/PatientSC/contracts/SickFactory.sol\":{\"keccak256\":\"0x09f1946eaf61bf9ba394a1c478d5c9e1e0d101ff9881d456c8b35714ac6cf8ba\",\"urls\":[\"bzz-raw://dda59d3f06084fdf3c197e3cd8b96a72ac6e7e29243ba2bd043ed66de44f3040\",\"dweb:/ipfs/Qmb28B8supKpSTZCcpcp8Pn46U6kCo5yKbhbxEuhCGLWPz\"]},\"/home/thanhvuong/thanh/PatientSC/libs/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x5b76a7172287e0f9b61001dc3e524096f2c41d142b5467b0f73884bfa0e0c0ee\",\"urls\":[\"bzz-raw://ff59fd7873d57cfcfb11d905cc7edbcfc27071df7b15c941d4025ef733195016\",\"dweb:/ipfs/QmZ7ZLxNN7S2oeUmN6aeZrEawZJ9KgaQkVE96QHgbzWc2M\"]},\"/home/thanhvuong/thanh/PatientSC/libs/openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xeb65ba4c20e18ab5025d55c080279b2495448b249028e80e2cd474a028dd5abd\",\"urls\":[\"bzz-raw://79b21a74eccb17c2228f4921961b5d9997932554ef3e0d44ece8741f6c4e4f33\",\"dweb:/ipfs/QmbXMfMbe5UNk4H55W6wu5zkrjmkwUEp9NEhMBVARGfqaY\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d05806100536000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638b215cd1116100b8578063add063e61161007c578063add063e614610899578063c0a5a067146108db578063c2003a00146108f9578063f2fde38b146109be578063f54d4b1114610a02578063fbabb2cd14610a8557610142565b80638b215cd1146106585780638da5cb5b1461067657806392f952fe146106c057806393119a831461072e578063a61a46b31461086157610142565b80634baa96cc1161010a5780634baa96cc146102ff5780635e01eb5a14610398578063657cd559146103e2578063715018a61461043a578063733b17bd146104445780638836580f146104f257610142565b806312e7cb8c1461014757806323b872dd146101895780632e196a96146101f757806330e0789e1461024f5780633661319e146102bd575b600080fd5b6101736004803603602081101561015d57600080fd5b8101908080359060200190929190505050610add565b6040518082815260200191505060405180910390f35b6101f56004803603606081101561019f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610af5565b005b6102396004803603602081101561020d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b70565b6040518082815260200191505060405180910390f35b6102bb6004803603606081101561026557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b88565b005b6102e9600480360360208110156102d357600080fd5b8101908080359060200190929190505050610daa565b6040518082815260200191505060405180910390f35b6103416004803603602081101561031557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e8f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610384578082015181840152602081019050610369565b505050509050019250505060405180910390f35b6103a0610fb9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610424600480360360208110156103f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fc1565b6040518082815260200191505060405180910390f35b61044261100a565b005b6104706004803603602081101561045a57600080fd5b810190808035906020019092919050505061110a565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156104b657808201518184015260208101905061049b565b50505050905090810190601f1680156104e35780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6106566004803603608081101561050857600080fd5b810190808035906020019064010000000081111561052557600080fd5b82018360208201111561053757600080fd5b8035906020019184600183028401116401000000008311171561055957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156105bc57600080fd5b8201836020820111156105ce57600080fd5b803590602001918460018302840111640100000000831117156105f057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803590602001909291905050506111d3565b005b610660611491565b6040518082815260200191505060405180910390f35b61067e61149e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106ec600480360360208110156106d657600080fd5b81019080803590602001909291905050506114c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61075a6004803603602081101561074457600080fd5b81019080803590602001909291905050506114f6565b60405180878152602001806020018060200186815260200185815260200184151515158152602001838103835288818151815260200191508051906020019080838360005b838110156107ba57808201518184015260208101905061079f565b50505050905090810190601f1680156107e75780820380516001836020036101000a031916815260200191505b50838103825287818151815260200191508051906020019080838360005b83811015610820578082015181840152602081019050610805565b50505050905090810190601f16801561084d5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b6108976004803603604081101561087757600080fd5b81019080803590602001909291908035906020019092919050505061167c565b005b6108c5600480360360208110156108af57600080fd5b81019080803590602001909291905050506117da565b6040518082815260200191505060405180910390f35b6108e3611805565b6040518082815260200191505060405180910390f35b6109bc6004803603604081101561090f57600080fd5b810190808035906020019064010000000081111561092c57600080fd5b82018360208201111561093e57600080fd5b8035906020019184600183028401116401000000008311171561096057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050611812565b005b610a00600480360360208110156109d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061198e565b005b610a2e60048036036020811015610a1857600080fd5b81019080803590602001909291905050506119f3565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610a71578082015181840152602081019050610a56565b505050509050019250505060405180910390f35b610ac760048036036020811015610a9b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a82565b6040518082815260200191505060405180910390f35b60076020528060005260406000206000915090505481565b3373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b6057600080fd5b610b6b838383610b88565b505050565b60026020528060005260406000206000915090505481565b610bdb6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a9a90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c716001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ab490919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b6000805b600680549050811015610df7578260068281548110610dc957fe5b9060005260206000209060020201600001541415610dea5780915050610e8a565b8080600101915050610dae565b50606060006001600660405180604001604052808781526020018581525090806001815401808255809150509060018203906000526020600020906002020160009091929091909150600082015181600001556020820151816001019080519060200190610e66929190611bde565b50505003905080600760008681526020019081526020016000208190555080925050505b919050565b606080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610f005781602001602082028038833980820191505090505b509050600080905060005b600180549050811015610fae578473ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610fa15780838381518110610f8c57fe5b60200260200101818152505081806001019250505b8080600101915050610f0b565b508192505050919050565b600033905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461106357600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6005818154811061111757fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111c35780601f10611198576101008083540402835291602001916111c3565b820191906000526020600020905b8154815290600101906020018083116111a657829003601f168201915b5050505050908060010154905082565b6000600180549050905060006001806040518060c001604052808581526020018981526020018881526020018781526020018681526020016001151581525090806001815401808255809150509060018203906000526020600020906006020160009091929091909150600082015181600001556020820151816001019080519060200190611263929190611c2b565b506040820151816002019080519060200190611280929190611c2b565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055505050039050336004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f557bf9091e5e17797594eb1f2a2ed64dbbbbfd9dc4ec21bfe6a35959540cd9a68187878787600160405180878152602001806020018060200186815260200185815260200184151515158152602001838103835288818151815260200191508051906020019080838360005b838110156113e35780820151818401526020810190506113c8565b50505050905090810190601f1680156114105780820380516001836020036101000a031916815260200191505b50838103825287818151815260200191508051906020019080838360005b8381101561144957808201518184015260208101905061142e565b50505050905090810190601f1680156114765780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a1505050505050565b6000600580549050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061150357fe5b9060005260206000209060060201600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115b55780601f1061158a576101008083540402835291602001916115b5565b820191906000526020600020905b81548152906001019060200180831161159857829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116535780601f1061162857610100808354040283529160200191611653565b820191906000526020600020905b81548152906001019060200180831161163657829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900460ff16905086565b816004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116e857600080fd5b81600080905060008090505b60058054905081101561173d57826005828154811061170f57fe5b90600052602060002090600202016001015414156117305781806001019250505b80806001019150506116f4565b506001811461174b57600080fd5b60006001868154811061175a57fe5b9060005260206000209060060201905061177381611acb565b61177c57600080fd5b600061178787610daa565b90506006818154811061179657fe5b906000526020600020906002020160010186908060018154018082558091505090600182039060005260206000200160009091929091909150555050505050505050565b600681815481106117e757fe5b90600052602060002090600202016000915090508060000154905081565b6000600680549050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461186b57600080fd5b6000600160056040518060400160405280868152602001858152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906118cd929190611c2b565b506020820151816001015550500390507f92062fc2c4762cb106802cc2c6da83d475d7570034c04db9347b05eb45e43c708184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561194d578082015181840152602081019050611932565b50505050905090810190601f16801561197a5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119e757600080fd5b6119f081611ae6565b50565b606060006007600084815260200190815260200160002054905060068181548110611a1a57fe5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020018280548015611a7557602002820191906000526020600020905b815481526020019060010190808311611a61575b5050505050915050919050565b60036020528060005260406000206000915090505481565b6000818301905082811015611aab57fe5b80905092915050565b600082821115611ac057fe5b818303905092915050565b60008160050160009054906101000a900460ff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611b2057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054828255906000526020600020908101928215611c1a579160200282015b82811115611c19578251825591602001919060010190611bfe565b5b509050611c279190611cab565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c6c57805160ff1916838001178555611c9a565b82800160010185558215611c9a579182015b82811115611c99578251825591602001919060010190611c7e565b5b509050611ca79190611cab565b5090565b611ccd91905b80821115611cc9576000816000905550600101611cb1565b5090565b9056fea265627a7a7231582086d78d96d27323d4d5d6becb00ea23a05e555ea0c6d469d7801802c0070c27e364736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c80638b215cd1116100b8578063add063e61161007c578063add063e614610899578063c0a5a067146108db578063c2003a00146108f9578063f2fde38b146109be578063f54d4b1114610a02578063fbabb2cd14610a8557610142565b80638b215cd1146106585780638da5cb5b1461067657806392f952fe146106c057806393119a831461072e578063a61a46b31461086157610142565b80634baa96cc1161010a5780634baa96cc146102ff5780635e01eb5a14610398578063657cd559146103e2578063715018a61461043a578063733b17bd146104445780638836580f146104f257610142565b806312e7cb8c1461014757806323b872dd146101895780632e196a96146101f757806330e0789e1461024f5780633661319e146102bd575b600080fd5b6101736004803603602081101561015d57600080fd5b8101908080359060200190929190505050610add565b6040518082815260200191505060405180910390f35b6101f56004803603606081101561019f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610af5565b005b6102396004803603602081101561020d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b70565b6040518082815260200191505060405180910390f35b6102bb6004803603606081101561026557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b88565b005b6102e9600480360360208110156102d357600080fd5b8101908080359060200190929190505050610daa565b6040518082815260200191505060405180910390f35b6103416004803603602081101561031557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e8f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610384578082015181840152602081019050610369565b505050509050019250505060405180910390f35b6103a0610fb9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610424600480360360208110156103f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fc1565b6040518082815260200191505060405180910390f35b61044261100a565b005b6104706004803603602081101561045a57600080fd5b810190808035906020019092919050505061110a565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156104b657808201518184015260208101905061049b565b50505050905090810190601f1680156104e35780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6106566004803603608081101561050857600080fd5b810190808035906020019064010000000081111561052557600080fd5b82018360208201111561053757600080fd5b8035906020019184600183028401116401000000008311171561055957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156105bc57600080fd5b8201836020820111156105ce57600080fd5b803590602001918460018302840111640100000000831117156105f057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803590602001909291905050506111d3565b005b610660611491565b6040518082815260200191505060405180910390f35b61067e61149e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106ec600480360360208110156106d657600080fd5b81019080803590602001909291905050506114c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61075a6004803603602081101561074457600080fd5b81019080803590602001909291905050506114f6565b60405180878152602001806020018060200186815260200185815260200184151515158152602001838103835288818151815260200191508051906020019080838360005b838110156107ba57808201518184015260208101905061079f565b50505050905090810190601f1680156107e75780820380516001836020036101000a031916815260200191505b50838103825287818151815260200191508051906020019080838360005b83811015610820578082015181840152602081019050610805565b50505050905090810190601f16801561084d5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b6108976004803603604081101561087757600080fd5b81019080803590602001909291908035906020019092919050505061167c565b005b6108c5600480360360208110156108af57600080fd5b81019080803590602001909291905050506117da565b6040518082815260200191505060405180910390f35b6108e3611805565b6040518082815260200191505060405180910390f35b6109bc6004803603604081101561090f57600080fd5b810190808035906020019064010000000081111561092c57600080fd5b82018360208201111561093e57600080fd5b8035906020019184600183028401116401000000008311171561096057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050611812565b005b610a00600480360360208110156109d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061198e565b005b610a2e60048036036020811015610a1857600080fd5b81019080803590602001909291905050506119f3565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610a71578082015181840152602081019050610a56565b505050509050019250505060405180910390f35b610ac760048036036020811015610a9b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a82565b6040518082815260200191505060405180910390f35b60076020528060005260406000206000915090505481565b3373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b6057600080fd5b610b6b838383610b88565b505050565b60026020528060005260406000206000915090505481565b610bdb6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a9a90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c716001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ab490919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b6000805b600680549050811015610df7578260068281548110610dc957fe5b9060005260206000209060020201600001541415610dea5780915050610e8a565b8080600101915050610dae565b50606060006001600660405180604001604052808781526020018581525090806001815401808255809150509060018203906000526020600020906002020160009091929091909150600082015181600001556020820151816001019080519060200190610e66929190611bde565b50505003905080600760008681526020019081526020016000208190555080925050505b919050565b606080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610f005781602001602082028038833980820191505090505b509050600080905060005b600180549050811015610fae578473ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610fa15780838381518110610f8c57fe5b60200260200101818152505081806001019250505b8080600101915050610f0b565b508192505050919050565b600033905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461106357600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6005818154811061111757fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111c35780601f10611198576101008083540402835291602001916111c3565b820191906000526020600020905b8154815290600101906020018083116111a657829003601f168201915b5050505050908060010154905082565b6000600180549050905060006001806040518060c001604052808581526020018981526020018881526020018781526020018681526020016001151581525090806001815401808255809150509060018203906000526020600020906006020160009091929091909150600082015181600001556020820151816001019080519060200190611263929190611c2b565b506040820151816002019080519060200190611280929190611c2b565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055505050039050336004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f557bf9091e5e17797594eb1f2a2ed64dbbbbfd9dc4ec21bfe6a35959540cd9a68187878787600160405180878152602001806020018060200186815260200185815260200184151515158152602001838103835288818151815260200191508051906020019080838360005b838110156113e35780820151818401526020810190506113c8565b50505050905090810190601f1680156114105780820380516001836020036101000a031916815260200191505b50838103825287818151815260200191508051906020019080838360005b8381101561144957808201518184015260208101905061142e565b50505050905090810190601f1680156114765780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a1505050505050565b6000600580549050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061150357fe5b9060005260206000209060060201600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115b55780601f1061158a576101008083540402835291602001916115b5565b820191906000526020600020905b81548152906001019060200180831161159857829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116535780601f1061162857610100808354040283529160200191611653565b820191906000526020600020905b81548152906001019060200180831161163657829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900460ff16905086565b816004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116e857600080fd5b81600080905060008090505b60058054905081101561173d57826005828154811061170f57fe5b90600052602060002090600202016001015414156117305781806001019250505b80806001019150506116f4565b506001811461174b57600080fd5b60006001868154811061175a57fe5b9060005260206000209060060201905061177381611acb565b61177c57600080fd5b600061178787610daa565b90506006818154811061179657fe5b906000526020600020906002020160010186908060018154018082558091505090600182039060005260206000200160009091929091909150555050505050505050565b600681815481106117e757fe5b90600052602060002090600202016000915090508060000154905081565b6000600680549050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461186b57600080fd5b6000600160056040518060400160405280868152602001858152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906118cd929190611c2b565b506020820151816001015550500390507f92062fc2c4762cb106802cc2c6da83d475d7570034c04db9347b05eb45e43c708184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561194d578082015181840152602081019050611932565b50505050905090810190601f16801561197a5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119e757600080fd5b6119f081611ae6565b50565b606060006007600084815260200190815260200160002054905060068181548110611a1a57fe5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020018280548015611a7557602002820191906000526020600020905b815481526020019060010190808311611a61575b5050505050915050919050565b60036020528060005260406000206000915090505481565b6000818301905082811015611aab57fe5b80905092915050565b600082821115611ac057fe5b818303905092915050565b60008160050160009054906101000a900460ff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611b2057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054828255906000526020600020908101928215611c1a579160200282015b82811115611c19578251825591602001919060010190611bfe565b5b509050611c279190611cab565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c6c57805160ff1916838001178555611c9a565b82800160010185558215611c9a579182015b82811115611c99578251825591602001919060010190611c7e565b5b509050611ca79190611cab565b5090565b611ccd91905b80821115611cc9576000816000905550600101611cb1565b5090565b9056fea265627a7a7231582086d78d96d27323d4d5d6becb00ea23a05e555ea0c6d469d7801802c0070c27e364736f6c63430005100032",
  "sourceMap": "94:1592:3:-;;;583:10:6;575:5;;:18;;;;;;;;;;;;;;;;;;94:1592:3;;;;;;",
  "deployedSourceMap": "94:1592:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;94:1592:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;283:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;283:48:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2055:180:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2055:180:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;693:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;693:49:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1743:306;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1743:306:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1223:460:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1223:460:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2241:428:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2241:428:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2241:428:2;;;;;;;;;;;;;;;;;1064:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1619:118;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1619:118:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1009:111:6;;;:::i;:::-;;294:19:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;294:19:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;294:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1156:457:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1156:457:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1156:457:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1156:457:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1156:457:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1156:457:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1156:457:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1156:457:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1156:457:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1156:457:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;759:88:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;246:20:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;861:49:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;861:49:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;661:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;661:25:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;661:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;661:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;522:378:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;522:378:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;249:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;249:27:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1121:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;543:210:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;543:210:4;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;543:210:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;543:210:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;543:210:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;543:210:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1282:103:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1282:103:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;906:209:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;906:209:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;906:209:3;;;;;;;;;;;;;;;;;774:52:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;774:52:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;283:48:3;;;;;;;;;;;;;;;;;:::o;2055:180:2:-;2176:10;2148:38;;:14;:24;2163:8;2148:24;;;;;;;;;;;;;;;;;;;;;:38;;;2140:47;;;;;;2197:31;2207:5;2214:3;2219:8;2197:9;:31::i;:::-;2055:180;;;:::o;693:49::-;;;;;;;;;;;;;;;;;:::o;1743:306::-;1850:29;1877:1;1850:17;:22;1868:3;1850:22;;;;;;;;;;;;;;;;:26;;:29;;;;:::i;:::-;1825:17;:22;1843:3;1825:22;;;;;;;;;;;;;;;:54;;;;1921:36;1955:1;1921:17;:29;1939:10;1921:29;;;;;;;;;;;;;;;;:33;;:36;;;;:::i;:::-;1889:17;:29;1907:10;1889:29;;;;;;;;;;;;;;;:68;;;;1994:3;1967:14;:24;1982:8;1967:24;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;2012;2021:5;2028:3;2033:8;2012:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1743:306;;;:::o;1223:460:3:-;1288:7;1382:9;1377:150;1397:9;:16;;;;1393:1;:20;1377:150;;;1464:10;1438:9;1448:1;1438:12;;;;;;;;;;;;;;;;;;:22;;;:36;1434:83;;;1501:1;1494:8;;;;;1434:83;1415:3;;;;;;;1377:150;;;;1536:18;1564:9;1618:1;1576:9;1591:23;;;;;;;;1600:10;1591:23;;;;1612:1;1591:23;;;1576:39;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1576:39:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:43;1564:55;;1657:1;1629:13;:25;1643:10;1629:25;;;;;;;;;;;:29;;;;1675:1;1668:8;;;;1223:460;;;;:::o;2241:428:2:-;2331:16;2363:23;2403:17;:25;2421:6;2403:25;;;;;;;;;;;;;;;;2389:40;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2389:40:2;;;;2363:66;;2439:13;2455:1;2439:17;;2471:9;2466:174;2486:8;:15;;;;2482:1;:19;2466:174;;;2547:6;2526:27;;:14;:17;2541:1;2526:17;;;;;;;;;;;;;;;;;;;;;:27;;;2522:108;;;2589:1;2573:6;2580:5;2573:13;;;;;;;;;;;;;:17;;;;;2608:7;;;;;;;2522:108;2503:3;;;;;;;2466:174;;;;2656:6;2649:13;;;;2241:428;;;:::o;1064:86::-;1106:7;1132:10;1125:17;;1064:86;:::o;1619:118::-;1678:7;1704:17;:25;1722:6;1704:25;;;;;;;;;;;;;;;;1697:32;;1619:118;;;:::o;1009:111:6:-;727:5;;;;;;;;;;;713:19;;:10;:19;;;705:28;;;;;;1085:5;;;;;;;;;;;1066:25;;;;;;;;;;;;1113:1;1097:5;;:18;;;;;;;;;;;;;;;;;;1009:111::o;294:19:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1156:457:2:-;1303:17;1323:8;:15;;;;1303:35;;1348:10;1462:1;1361:8;1388:49;;;;;;;;1396:9;1388:49;;;;1407:5;1388:49;;;;1414:4;1388:49;;;;1420:4;1388:49;;;;1426:4;1388:49;;;;1432:4;1388:49;;;;;1361:86;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1361:86:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:102;1348:115;;1494:10;1473:14;:18;1488:2;1473:18;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1514:17;:29;1532:10;1514:29;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;1560:45;1571:2;1575:5;1582:4;1588;1594;1600;1560:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1560:45:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1560:45:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1156:457;;;;;;:::o;759:88:4:-;802:7;828:5;:12;;;;821:19;;759:88;:::o;246:20:6:-;;;;;;;;;;;;;:::o;861:49:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;661:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;522:378:3:-;621:10;1014:14:2;:26;1029:10;1014:26;;;;;;;;;;;;;;;;;;;;;1000:40;;:10;:40;;;992:49;;;;;;648:9:3;365::4;377:1;365:13;;393:9;405:1;393:13;;388:107;412:5;:12;;;;408:1;:16;388:107;;;470:9;449:5;455:1;449:8;;;;;;;;;;;;;;;;;;:17;;;:30;445:39;;;481:3;;;;;;;445:39;426:3;;;;;;;388:107;;;;517:1;512;:6;504:15;;;;;;701:25:3;729:8;738:10;729:20;;;;;;;;;;;;;;;;;;701:48;;767:20;777:9;767;:20::i;:::-;759:29;;;;;;798:9;810:31;830:10;810:19;:31::i;:::-;798:43;;851:9;861:1;851:12;;;;;;;;;;;;;;;;;;:25;;882:9;851:41;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;851:41:3;;;;;;;;;;;;;;;;;;;;;;529:1:4;;1051::2;;522:378:3;;;:::o;249:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1121:96::-;1167:7;1193:9;:16;;;;1186:23;;1121:96;:::o;543:210:4:-;727:5:6;;;;;;;;;;;713:19;;:10;:19;;;705:28;;;;;;651:10:4;701:1;664:5;675:22;;;;;;;;680:5;675:22;;;;687:9;675:22;;;664:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;664:34:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;651:51;;717:29;725:2;729:5;736:9;717:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;717:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:1:6;543:210:4;;:::o;1282:103:6:-;727:5;;;;;;;;;;;713:19;;:10;:19;;;705:28;;;;;;1351:29;1370:9;1351:18;:29::i;:::-;1282:103;:::o;906:209:3:-;993:16;1025:9;1037:13;:25;1051:10;1037:25;;;;;;;;;;;;1025:37;;1081:9;1091:1;1081:12;;;;;;;;;;;;;;;;;;:25;;1073:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;906:209;;;:::o;774:52:2:-;;;;;;;;;;;;;;;;;:::o;1246:128:5:-;1306:9;1332:2;1327;:7;1323:11;;1352:2;1347:1;:7;;1340:15;;;;1368:1;1361:8;;1246:128;;;;:::o;1068:116::-;1128:7;1156:2;1150;:8;;1143:16;;;;1177:2;1172;:7;1165:14;;1068:116;;;;:::o;402:114:3:-;470:4;493:8;:15;;;;;;;;;;;;486:22;;402:114;;;:::o;1520:171:6:-;1611:1;1590:23;;:9;:23;;;;1582:32;;;;;;1653:9;1625:38;;1646:5;;;;;;;;;;;1625:38;;;;;;;;;;;;1677:9;1669:5;;:17;;;;;;;;;;;;;;;;;;1520:171;:::o;94:1592:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.7.0;\n\nimport \"./PatientFactory.sol\";\nimport \"./SickFactory.sol\";\n\ncontract SetSick is PatientFactory, SickFactory {\n    struct SickCode {\n        uint256 idpatient; //id patient\n        uint256[] sickcodeData;\n    }\n\n    SickCode[] public sickcodes;\n\n    mapping(uint256 => uint256) public PatientToSick; // benh nhanh -> id cua mang luu tru cac loai benh : sickcodeid\n\n    function _isLiving(Patient storage _patient) internal view returns (bool) {\n        return _patient.living;\n\n    }\n\n    function _setPatientSick(uint256 _patientId, uint256 _sickCode)\n        public\n        onlyOwnerOf(_patientId)\n        isSick(_sickCode)\n    {\n        // patient mac benh\n        Patient storage myPatient = patients[_patientId];\n        require(_isLiving(myPatient));\n        uint256 a = PatientIdInSickCode(_patientId);\n        sickcodes[a].sickcodeData.push(_sickCode);\n\n    }\n\n    function viewSickCode(uint256 _patientId)\n        public\n        view\n        returns (uint256[] memory)\n    {\n        uint256 x = PatientToSick[_patientId];\n\n        return (sickcodes[x].sickcodeData);\n\n    }\n\n    function countSickCode() public view returns (uint256) {\n        return sickcodes.length;\n\n    }\n\n    function PatientIdInSickCode(uint256 _patientId) public returns (uint256) {\n        // kiem tra xem patient da dk khai bao trong sickcodes chua .\n        for (uint256 i; i < sickcodes.length; i++) {\n            if (sickcodes[i].idpatient == _patientId) {\n                return i;\n            }\n        }\n        uint256[] memory a;\n        uint256 x = sickcodes.push(SickCode(_patientId, a)) - 1;\n        PatientToSick[_patientId] = x;\n        return x;\n    }\n\n}\n",
  "sourcePath": "/home/thanhvuong/thanh/PatientSC/contracts/SetSick.sol",
  "ast": {
    "absolutePath": "/home/thanhvuong/thanh/PatientSC/contracts/SetSick.sol",
    "exportedSymbols": {
      "SetSick": [
        865
      ]
    },
    "id": 866,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 709,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/home/thanhvuong/thanh/PatientSC/contracts/PatientFactory.sol",
        "file": "./PatientFactory.sol",
        "id": 710,
        "nodeType": "ImportDirective",
        "scope": 866,
        "sourceUnit": 708,
        "src": "34:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/thanhvuong/thanh/PatientSC/contracts/SickFactory.sol",
        "file": "./SickFactory.sol",
        "id": 711,
        "nodeType": "ImportDirective",
        "scope": 866,
        "sourceUnit": 964,
        "src": "65:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 712,
              "name": "PatientFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 707,
              "src": "114:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PatientFactory_$707",
                "typeString": "contract PatientFactory"
              }
            },
            "id": 713,
            "nodeType": "InheritanceSpecifier",
            "src": "114:14:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 714,
              "name": "SickFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 963,
              "src": "130:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SickFactory_$963",
                "typeString": "contract SickFactory"
              }
            },
            "id": 715,
            "nodeType": "InheritanceSpecifier",
            "src": "130:11:3"
          }
        ],
        "contractDependencies": [
          707,
          963,
          1143
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 865,
        "linearizedBaseContracts": [
          865,
          963,
          707,
          1143
        ],
        "name": "SetSick",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SetSick.SickCode",
            "id": 721,
            "members": [
              {
                "constant": false,
                "id": 717,
                "name": "idpatient",
                "nodeType": "VariableDeclaration",
                "scope": 721,
                "src": "174:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 716,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "174:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 720,
                "name": "sickcodeData",
                "nodeType": "VariableDeclaration",
                "scope": 721,
                "src": "214:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "214:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 719,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "214:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SickCode",
            "nodeType": "StructDefinition",
            "scope": 865,
            "src": "148:95:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 724,
            "name": "sickcodes",
            "nodeType": "VariableDeclaration",
            "scope": 865,
            "src": "249:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage",
              "typeString": "struct SetSick.SickCode[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 722,
                "name": "SickCode",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 721,
                "src": "249:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SickCode_$721_storage_ptr",
                  "typeString": "struct SetSick.SickCode"
                }
              },
              "id": 723,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "249:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage_ptr",
                "typeString": "struct SetSick.SickCode[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 728,
            "name": "PatientToSick",
            "nodeType": "VariableDeclaration",
            "scope": 865,
            "src": "283:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 727,
              "keyType": {
                "id": 725,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "291:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "283:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 726,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "302:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 738,
              "nodeType": "Block",
              "src": "476:40:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 735,
                      "name": "_patient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 730,
                      "src": "493:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$474_storage_ptr",
                        "typeString": "struct PatientFactory.Patient storage pointer"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "living",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 473,
                    "src": "493:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 734,
                  "id": 737,
                  "nodeType": "Return",
                  "src": "486:22:3"
                }
              ]
            },
            "documentation": null,
            "id": 739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isLiving",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 730,
                  "name": "_patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "421:24:3",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Patient_$474_storage_ptr",
                    "typeString": "struct PatientFactory.Patient"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 729,
                    "name": "Patient",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 474,
                    "src": "421:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Patient_$474_storage_ptr",
                      "typeString": "struct PatientFactory.Patient"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "420:26:3"
            },
            "returnParameters": {
              "id": 734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 733,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "470:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "469:6:3"
            },
            "scope": 865,
            "src": "402:114:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 778,
              "nodeType": "Block",
              "src": "663:237:3",
              "statements": [
                {
                  "assignments": [
                    753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 753,
                      "name": "myPatient",
                      "nodeType": "VariableDeclaration",
                      "scope": 778,
                      "src": "701:25:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$474_storage_ptr",
                        "typeString": "struct PatientFactory.Patient"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 752,
                        "name": "Patient",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 474,
                        "src": "701:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$474_storage_ptr",
                          "typeString": "struct PatientFactory.Patient"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 757,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 754,
                      "name": "patients",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "729:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Patient_$474_storage_$dyn_storage",
                        "typeString": "struct PatientFactory.Patient storage ref[] storage ref"
                      }
                    },
                    "id": 756,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 755,
                      "name": "_patientId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "738:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "729:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Patient_$474_storage",
                      "typeString": "struct PatientFactory.Patient storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "701:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 760,
                            "name": "myPatient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "777:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Patient_$474_storage_ptr",
                              "typeString": "struct PatientFactory.Patient storage pointer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Patient_$474_storage_ptr",
                              "typeString": "struct PatientFactory.Patient storage pointer"
                            }
                          ],
                          "id": 759,
                          "name": "_isLiving",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 739,
                          "src": "767:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Patient_$474_storage_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct PatientFactory.Patient storage pointer) view returns (bool)"
                          }
                        },
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "767:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 758,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1161,
                        1162
                      ],
                      "referencedDeclaration": 1161,
                      "src": "759:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "759:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "759:29:3"
                },
                {
                  "assignments": [
                    765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 765,
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "scope": 778,
                      "src": "798:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 764,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "798:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 769,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 767,
                        "name": "_patientId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "830:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 766,
                      "name": "PatientIdInSickCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 864,
                      "src": "810:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "810:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "798:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 775,
                        "name": "_sickCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "882:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 770,
                            "name": "sickcodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "851:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage",
                              "typeString": "struct SetSick.SickCode storage ref[] storage ref"
                            }
                          },
                          "id": 772,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 771,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "861:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "851:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SickCode_$721_storage",
                            "typeString": "struct SetSick.SickCode storage ref"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sickcodeData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 720,
                        "src": "851:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "851:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "851:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "851:41:3"
                }
              ]
            },
            "documentation": null,
            "id": 779,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 746,
                    "name": "_patientId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 741,
                    "src": "621:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 747,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 745,
                  "name": "onlyOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 504,
                  "src": "609:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "609:23:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 749,
                    "name": "_sickCode",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 743,
                    "src": "648:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 750,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 748,
                  "name": "isSick",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 925,
                  "src": "641:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "641:17:3"
              }
            ],
            "name": "_setPatientSick",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 741,
                  "name": "_patientId",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "547:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "name": "_sickCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "567:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "546:39:3"
            },
            "returnParameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "663:0:3"
            },
            "scope": 865,
            "src": "522:378:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "1015:100:3",
              "statements": [
                {
                  "assignments": [
                    788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 788,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "1025:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 787,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1025:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 792,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 789,
                      "name": "PatientToSick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 728,
                      "src": "1037:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 791,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 790,
                      "name": "_patientId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 781,
                      "src": "1051:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1037:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1025:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 793,
                            "name": "sickcodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "1081:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage",
                              "typeString": "struct SetSick.SickCode storage ref[] storage ref"
                            }
                          },
                          "id": 795,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 794,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 788,
                            "src": "1091:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1081:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SickCode_$721_storage",
                            "typeString": "struct SetSick.SickCode storage ref"
                          }
                        },
                        "id": 796,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sickcodeData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 720,
                        "src": "1081:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      }
                    ],
                    "id": 797,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1080:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 786,
                  "id": 798,
                  "nodeType": "Return",
                  "src": "1073:34:3"
                }
              ]
            },
            "documentation": null,
            "id": 800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewSickCode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "name": "_patientId",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "928:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "927:20:3"
            },
            "returnParameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 785,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "993:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 783,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "993:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 784,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "993:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "992:18:3"
            },
            "scope": 865,
            "src": "906:209:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 808,
              "nodeType": "Block",
              "src": "1176:41:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 805,
                      "name": "sickcodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "1193:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage",
                        "typeString": "struct SetSick.SickCode storage ref[] storage ref"
                      }
                    },
                    "id": 806,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1193:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 804,
                  "id": 807,
                  "nodeType": "Return",
                  "src": "1186:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 809,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "countSickCode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1143:2:3"
            },
            "returnParameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 803,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "1167:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1166:9:3"
            },
            "scope": 865,
            "src": "1121:96:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 863,
              "nodeType": "Block",
              "src": "1297:386:3",
              "statements": [
                {
                  "body": {
                    "id": 836,
                    "nodeType": "Block",
                    "src": "1420:107:3",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 826,
                                "name": "sickcodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "1438:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage",
                                  "typeString": "struct SetSick.SickCode storage ref[] storage ref"
                                }
                              },
                              "id": 828,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 827,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 817,
                                "src": "1448:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1438:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SickCode_$721_storage",
                                "typeString": "struct SetSick.SickCode storage ref"
                              }
                            },
                            "id": 829,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "idpatient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 717,
                            "src": "1438:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 830,
                            "name": "_patientId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "1464:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1438:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 835,
                        "nodeType": "IfStatement",
                        "src": "1434:83:3",
                        "trueBody": {
                          "id": 834,
                          "nodeType": "Block",
                          "src": "1476:41:3",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 832,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 817,
                                "src": "1501:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 815,
                              "id": 833,
                              "nodeType": "Return",
                              "src": "1494:8:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 819,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 817,
                      "src": "1393:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 820,
                        "name": "sickcodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "1397:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage",
                          "typeString": "struct SetSick.SickCode storage ref[] storage ref"
                        }
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1397:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1393:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 837,
                  "initializationExpression": {
                    "assignments": [
                      817
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 817,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "1382:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 816,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1382:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 818,
                    "initialValue": null,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1382:9:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1415:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 823,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "1415:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 825,
                    "nodeType": "ExpressionStatement",
                    "src": "1415:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "1377:150:3"
                },
                {
                  "assignments": [
                    841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 841,
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "scope": 863,
                      "src": "1536:18:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 839,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1536:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 840,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1536:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 842,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1536:18:3"
                },
                {
                  "assignments": [
                    844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 844,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 863,
                      "src": "1564:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 843,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1564:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 854,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 848,
                              "name": "_patientId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 811,
                              "src": "1600:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 849,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "1612:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "id": 847,
                            "name": "SickCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "1591:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SickCode_$721_storage_ptr_$",
                              "typeString": "type(struct SetSick.SickCode storage pointer)"
                            }
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1591:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SickCode_$721_memory",
                            "typeString": "struct SetSick.SickCode memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_SickCode_$721_memory",
                            "typeString": "struct SetSick.SickCode memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 845,
                          "name": "sickcodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "1576:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage",
                            "typeString": "struct SetSick.SickCode storage ref[] storage ref"
                          }
                        },
                        "id": 846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1576:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SickCode_$721_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct SetSick.SickCode storage ref) returns (uint256)"
                        }
                      },
                      "id": 851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1576:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1618:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1576:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1564:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 855,
                        "name": "PatientToSick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 728,
                        "src": "1629:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 857,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 856,
                        "name": "_patientId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "1643:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1629:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 858,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "1657:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1629:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 861,
                    "name": "x",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 844,
                    "src": "1675:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 815,
                  "id": 862,
                  "nodeType": "Return",
                  "src": "1668:8:3"
                }
              ]
            },
            "documentation": null,
            "id": 864,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PatientIdInSickCode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 811,
                  "name": "_patientId",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1252:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1251:20:3"
            },
            "returnParameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 814,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1288:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1287:9:3"
            },
            "scope": 865,
            "src": "1223:460:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 866,
        "src": "94:1592:3"
      }
    ],
    "src": "0:1687:3"
  },
  "legacyAST": {
    "absolutePath": "/home/thanhvuong/thanh/PatientSC/contracts/SetSick.sol",
    "exportedSymbols": {
      "SetSick": [
        865
      ]
    },
    "id": 866,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 709,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/home/thanhvuong/thanh/PatientSC/contracts/PatientFactory.sol",
        "file": "./PatientFactory.sol",
        "id": 710,
        "nodeType": "ImportDirective",
        "scope": 866,
        "sourceUnit": 708,
        "src": "34:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/thanhvuong/thanh/PatientSC/contracts/SickFactory.sol",
        "file": "./SickFactory.sol",
        "id": 711,
        "nodeType": "ImportDirective",
        "scope": 866,
        "sourceUnit": 964,
        "src": "65:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 712,
              "name": "PatientFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 707,
              "src": "114:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PatientFactory_$707",
                "typeString": "contract PatientFactory"
              }
            },
            "id": 713,
            "nodeType": "InheritanceSpecifier",
            "src": "114:14:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 714,
              "name": "SickFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 963,
              "src": "130:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SickFactory_$963",
                "typeString": "contract SickFactory"
              }
            },
            "id": 715,
            "nodeType": "InheritanceSpecifier",
            "src": "130:11:3"
          }
        ],
        "contractDependencies": [
          707,
          963,
          1143
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 865,
        "linearizedBaseContracts": [
          865,
          963,
          707,
          1143
        ],
        "name": "SetSick",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SetSick.SickCode",
            "id": 721,
            "members": [
              {
                "constant": false,
                "id": 717,
                "name": "idpatient",
                "nodeType": "VariableDeclaration",
                "scope": 721,
                "src": "174:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 716,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "174:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 720,
                "name": "sickcodeData",
                "nodeType": "VariableDeclaration",
                "scope": 721,
                "src": "214:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "214:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 719,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "214:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SickCode",
            "nodeType": "StructDefinition",
            "scope": 865,
            "src": "148:95:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 724,
            "name": "sickcodes",
            "nodeType": "VariableDeclaration",
            "scope": 865,
            "src": "249:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage",
              "typeString": "struct SetSick.SickCode[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 722,
                "name": "SickCode",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 721,
                "src": "249:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SickCode_$721_storage_ptr",
                  "typeString": "struct SetSick.SickCode"
                }
              },
              "id": 723,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "249:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage_ptr",
                "typeString": "struct SetSick.SickCode[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 728,
            "name": "PatientToSick",
            "nodeType": "VariableDeclaration",
            "scope": 865,
            "src": "283:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 727,
              "keyType": {
                "id": 725,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "291:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "283:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 726,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "302:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 738,
              "nodeType": "Block",
              "src": "476:40:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 735,
                      "name": "_patient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 730,
                      "src": "493:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$474_storage_ptr",
                        "typeString": "struct PatientFactory.Patient storage pointer"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "living",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 473,
                    "src": "493:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 734,
                  "id": 737,
                  "nodeType": "Return",
                  "src": "486:22:3"
                }
              ]
            },
            "documentation": null,
            "id": 739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isLiving",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 730,
                  "name": "_patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "421:24:3",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Patient_$474_storage_ptr",
                    "typeString": "struct PatientFactory.Patient"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 729,
                    "name": "Patient",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 474,
                    "src": "421:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Patient_$474_storage_ptr",
                      "typeString": "struct PatientFactory.Patient"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "420:26:3"
            },
            "returnParameters": {
              "id": 734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 733,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "470:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "469:6:3"
            },
            "scope": 865,
            "src": "402:114:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 778,
              "nodeType": "Block",
              "src": "663:237:3",
              "statements": [
                {
                  "assignments": [
                    753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 753,
                      "name": "myPatient",
                      "nodeType": "VariableDeclaration",
                      "scope": 778,
                      "src": "701:25:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$474_storage_ptr",
                        "typeString": "struct PatientFactory.Patient"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 752,
                        "name": "Patient",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 474,
                        "src": "701:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$474_storage_ptr",
                          "typeString": "struct PatientFactory.Patient"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 757,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 754,
                      "name": "patients",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "729:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Patient_$474_storage_$dyn_storage",
                        "typeString": "struct PatientFactory.Patient storage ref[] storage ref"
                      }
                    },
                    "id": 756,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 755,
                      "name": "_patientId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "738:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "729:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Patient_$474_storage",
                      "typeString": "struct PatientFactory.Patient storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "701:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 760,
                            "name": "myPatient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "777:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Patient_$474_storage_ptr",
                              "typeString": "struct PatientFactory.Patient storage pointer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Patient_$474_storage_ptr",
                              "typeString": "struct PatientFactory.Patient storage pointer"
                            }
                          ],
                          "id": 759,
                          "name": "_isLiving",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 739,
                          "src": "767:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Patient_$474_storage_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct PatientFactory.Patient storage pointer) view returns (bool)"
                          }
                        },
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "767:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 758,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1161,
                        1162
                      ],
                      "referencedDeclaration": 1161,
                      "src": "759:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "759:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "759:29:3"
                },
                {
                  "assignments": [
                    765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 765,
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "scope": 778,
                      "src": "798:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 764,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "798:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 769,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 767,
                        "name": "_patientId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "830:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 766,
                      "name": "PatientIdInSickCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 864,
                      "src": "810:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "810:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "798:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 775,
                        "name": "_sickCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "882:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 770,
                            "name": "sickcodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "851:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage",
                              "typeString": "struct SetSick.SickCode storage ref[] storage ref"
                            }
                          },
                          "id": 772,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 771,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "861:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "851:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SickCode_$721_storage",
                            "typeString": "struct SetSick.SickCode storage ref"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sickcodeData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 720,
                        "src": "851:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "851:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "851:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "851:41:3"
                }
              ]
            },
            "documentation": null,
            "id": 779,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 746,
                    "name": "_patientId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 741,
                    "src": "621:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 747,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 745,
                  "name": "onlyOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 504,
                  "src": "609:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "609:23:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 749,
                    "name": "_sickCode",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 743,
                    "src": "648:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 750,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 748,
                  "name": "isSick",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 925,
                  "src": "641:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "641:17:3"
              }
            ],
            "name": "_setPatientSick",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 741,
                  "name": "_patientId",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "547:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "name": "_sickCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "567:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "546:39:3"
            },
            "returnParameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "663:0:3"
            },
            "scope": 865,
            "src": "522:378:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "1015:100:3",
              "statements": [
                {
                  "assignments": [
                    788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 788,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "1025:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 787,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1025:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 792,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 789,
                      "name": "PatientToSick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 728,
                      "src": "1037:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 791,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 790,
                      "name": "_patientId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 781,
                      "src": "1051:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1037:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1025:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 793,
                            "name": "sickcodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "1081:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage",
                              "typeString": "struct SetSick.SickCode storage ref[] storage ref"
                            }
                          },
                          "id": 795,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 794,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 788,
                            "src": "1091:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1081:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SickCode_$721_storage",
                            "typeString": "struct SetSick.SickCode storage ref"
                          }
                        },
                        "id": 796,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sickcodeData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 720,
                        "src": "1081:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      }
                    ],
                    "id": 797,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1080:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 786,
                  "id": 798,
                  "nodeType": "Return",
                  "src": "1073:34:3"
                }
              ]
            },
            "documentation": null,
            "id": 800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewSickCode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "name": "_patientId",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "928:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "927:20:3"
            },
            "returnParameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 785,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "993:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 783,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "993:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 784,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "993:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "992:18:3"
            },
            "scope": 865,
            "src": "906:209:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 808,
              "nodeType": "Block",
              "src": "1176:41:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 805,
                      "name": "sickcodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "1193:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage",
                        "typeString": "struct SetSick.SickCode storage ref[] storage ref"
                      }
                    },
                    "id": 806,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1193:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 804,
                  "id": 807,
                  "nodeType": "Return",
                  "src": "1186:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 809,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "countSickCode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1143:2:3"
            },
            "returnParameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 803,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "1167:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1166:9:3"
            },
            "scope": 865,
            "src": "1121:96:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 863,
              "nodeType": "Block",
              "src": "1297:386:3",
              "statements": [
                {
                  "body": {
                    "id": 836,
                    "nodeType": "Block",
                    "src": "1420:107:3",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 826,
                                "name": "sickcodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "1438:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage",
                                  "typeString": "struct SetSick.SickCode storage ref[] storage ref"
                                }
                              },
                              "id": 828,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 827,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 817,
                                "src": "1448:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1438:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SickCode_$721_storage",
                                "typeString": "struct SetSick.SickCode storage ref"
                              }
                            },
                            "id": 829,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "idpatient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 717,
                            "src": "1438:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 830,
                            "name": "_patientId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "1464:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1438:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 835,
                        "nodeType": "IfStatement",
                        "src": "1434:83:3",
                        "trueBody": {
                          "id": 834,
                          "nodeType": "Block",
                          "src": "1476:41:3",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 832,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 817,
                                "src": "1501:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 815,
                              "id": 833,
                              "nodeType": "Return",
                              "src": "1494:8:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 819,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 817,
                      "src": "1393:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 820,
                        "name": "sickcodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "1397:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage",
                          "typeString": "struct SetSick.SickCode storage ref[] storage ref"
                        }
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1397:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1393:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 837,
                  "initializationExpression": {
                    "assignments": [
                      817
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 817,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "1382:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 816,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1382:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 818,
                    "initialValue": null,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1382:9:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1415:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 823,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "1415:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 825,
                    "nodeType": "ExpressionStatement",
                    "src": "1415:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "1377:150:3"
                },
                {
                  "assignments": [
                    841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 841,
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "scope": 863,
                      "src": "1536:18:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 839,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1536:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 840,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1536:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 842,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1536:18:3"
                },
                {
                  "assignments": [
                    844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 844,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 863,
                      "src": "1564:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 843,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1564:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 854,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 848,
                              "name": "_patientId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 811,
                              "src": "1600:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 849,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "1612:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "id": 847,
                            "name": "SickCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "1591:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SickCode_$721_storage_ptr_$",
                              "typeString": "type(struct SetSick.SickCode storage pointer)"
                            }
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1591:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SickCode_$721_memory",
                            "typeString": "struct SetSick.SickCode memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_SickCode_$721_memory",
                            "typeString": "struct SetSick.SickCode memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 845,
                          "name": "sickcodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "1576:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_SickCode_$721_storage_$dyn_storage",
                            "typeString": "struct SetSick.SickCode storage ref[] storage ref"
                          }
                        },
                        "id": 846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1576:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SickCode_$721_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct SetSick.SickCode storage ref) returns (uint256)"
                        }
                      },
                      "id": 851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1576:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1618:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1576:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1564:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 855,
                        "name": "PatientToSick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 728,
                        "src": "1629:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 857,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 856,
                        "name": "_patientId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "1643:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1629:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 858,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "1657:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1629:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 861,
                    "name": "x",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 844,
                    "src": "1675:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 815,
                  "id": 862,
                  "nodeType": "Return",
                  "src": "1668:8:3"
                }
              ]
            },
            "documentation": null,
            "id": 864,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PatientIdInSickCode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 811,
                  "name": "_patientId",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1252:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1251:20:3"
            },
            "returnParameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 814,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1288:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1287:9:3"
            },
            "scope": 865,
            "src": "1223:460:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 866,
        "src": "94:1592:3"
      }
    ],
    "src": "0:1687:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x557bf9091e5e17797594eb1f2a2ed64dbbbbfd9dc4ec21bfe6a35959540cd9a6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "patientId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "cmt",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "age",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "sex",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "living",
              "type": "bool"
            }
          ],
          "name": "NewPatient",
          "type": "event"
        },
        "0x92062fc2c4762cb106802cc2c6da83d475d7570034c04db9347b05eb45e43c70": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "sickId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "sickCode",
              "type": "uint256"
            }
          ],
          "name": "NewSick",
          "type": "event"
        },
        "0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipRenounced",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2958Bc53a800D990b56DCC00C145856f03D1FBF2",
      "transactionHash": "0x19132e84870ae25cff59840013e21eb8c57e31d3101d6b52e8b373300b44725d"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-12T08:05:24.047Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}